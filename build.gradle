plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'java-library'
    id 'jacoco'
    id 'maven'
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

group = 'com.blueanvil'
version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72'
    implementation 'org.eclipse.rdf4j:rdf4j-runtime:3.4.4'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'com.squareup.okhttp3:okhttp:4.8.0'
    implementation 'com.beust:klaxon:5.0.1'
    implementation 'com.github.ajalt:clikt:2.8.0'
    implementation 'de.siegmar:fastcsv:1.0.3'

    testImplementation 'org.testng:testng:7.1.0'
    testImplementation 'com.ontotext.graphdb:graphdb-free-runtime:9.4.1'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

test {
    useTestNG()
    finalizedBy jacocoTestReport
}

coveralls {
    sourceDirs += ['src/main/kotlin']
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}

task vocabulary(type: JavaExec) {
    group = "Execution"
    classpath = sourceSets.main.runtimeClasspath
    main = "org.openownership.rdf.vocabulary.BodsVocabularyGeneratorApp"
}

task jsonlToRdf(type: JavaExec) {
    group = "Execution"
    classpath = sourceSets.main.runtimeClasspath
    main = "org.openownership.rdf.data.BodsDataConvertApp"
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=n']
}
